apiVersion: v1
kind: Template
labels:
  template: minio-template
metadata:
  annotations:
    description: Minio (S3 storage compatible) Service
    openshift.io/display-name: Minio (S3 storage compatible) Service
    tags: minio
  creationTimestamp: null
  name: minio
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: sa-minio
- apiVersion: v1
  kind: ImageStream
  metadata:
    creationTimestamp: null
    labels:
      app: minio
    name: is-minio
  spec:
    dockerImageRepository: ""
    tags:
      -
       from:
         kind: DockerImage
         name: minio/minio:${MINIO_IMAGE_DOCKER_TAG}
       name: minio_pseudo_tag
       importPolicy:
         scheduled: true
  status:
    dockerImageRepository: ""

- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    name: ${MINIO_SERVICE_NAME}
  spec:
    ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 9000
    selector:
      name: ${MINIO_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    name: dc-${MINIO_SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      name: ${MINIO_SERVICE_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: ${MINIO_SERVICE_NAME}
      spec:
        containers:
        - capabilities: {}
          image: ' '
          imagePullPolicy: IfNotPresent
          # Readiness probe detects situations when Minio server instance
          # is not ready to accept traffic. Kubernetes doesn't forward
          # traffic to the pod while readiness checks fail.
          readinessProbe:
            httpGet:
              path: /minio/health/ready
              port: 9000
            initialDelaySeconds: 120
            periodSeconds: 20
          # Liveness probe detects situations where Minio server instance
          # is not working properly and needs restart. Kubernetes automatically
          # restarts the pods if liveness checks fail.
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
            initialDelaySeconds: 120
            periodSeconds: 20
          name: cnt-minio
          ports:
          - containerPort: 9000
            name: http
            protocol: TCP
          env:
            - name: MINIO_ACCESS_KEY
              value: ${MINIO_ACCESS_KEY}
            - name: MINIO_SECRET_KEY
              value: ${MINIO_SECRET_KEY}
            - name: HOME
              value: /tmp
          command:
            - /bin/sh
            - '-c'
            - >-
              set -ex; df -h ; /bin/mkdir -p /tmp/bkt-gitlab-runner ; /usr/bin/minio server /tmp
          resources:
            limits:
              memory: 512Mi
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
        serviceAccountName: sa-minio
        dnsPolicy: ClusterFirst
        restartPolicy: Always
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - cnt-minio
        from:
          kind: ImageStreamTag
          name: is-minio:minio_pseudo_tag
        lastTriggeredImage: ""
      type: ImageChange
    - type: ConfigChange
  status: {}

parameters:
- description: The name of the OpenShift Service exposed for the Minio Cloud Storage.
  displayName: Minio Cloud Storage Service Name
  name: MINIO_SERVICE_NAME
  required: true
  value: minio-service

- description: Tag of Minio Cloud Storage image (latest or edge). Check https://hub.docker.com/r/minio/minio/tags/ for list of supported values
  displayName: Minio Cloud Storage Image Tag at Docker Hub
  name: MINIO_IMAGE_DOCKER_TAG
  value: "latest"

- description: Custom username or access key of 5 to 20 characters in length.
  displayName: Minio Cloud Storage Access Key
  name: MINIO_ACCESS_KEY
  from: '[a-zA-Z0-9]{20}'
  generate: expression

- description: Custom password or secret key of 8 to 40 characters in length.
  displayName: Minio Cloud Storage Secret Key
  name: MINIO_SECRET_KEY
  from: '[a-zA-Z0-9]{40}'
  generate: expression
